{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliankanaan/Documents/GitHub/reactExpressTodoApp/components/NewTaskController.jsx\";\n// imports input field, button, submit button\n// actually submits form\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddNewTaskInput from '../components/AddNewTaskInput';\nimport AddNewTaskButton from '../components/AddNewTaskButton';\n\nvar NewTaskControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewTaskControl, _React$Component);\n\n  function NewTaskControl(props) {\n    var _this;\n\n    _classCallCheck(this, NewTaskControl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTaskControl).call(this, props));\n    _this.state = {\n      wantsToAddTask: ''\n    }; // bind shit so we can use \"this\"\n\n    _this.handleAddTaskClick = _this.handleAddTaskClick.bind(_assertThisInitialized(_this));\n    _this.handleCancelAddTaskClick = _this.handleCancelAddTaskClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewTaskControl, [{\n    key: \"handleAddTaskClick\",\n    value: function handleAddTaskClick() {\n      this.setState({\n        wantsToAddTask: true\n      });\n    }\n  }, {\n    key: \"handleCancelAddTaskClick\",\n    value: function handleCancelAddTaskClick() {\n      this.setState({\n        wantsToAddTask: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var wantsToAddTask = this.state.wantsToAddTask;\n      var element;\n\n      if (wantsToAddTask) {\n        element = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(AddNewTaskButton, {\n          onClick: this.handleCancelAddTaskClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(AddNewTaskInput, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      } else {\n        element = React.createElement(AddNewTaskButton, {\n          onClick: this.handleAddTaskClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n\n      return {\n        element: element\n      };\n    }\n  }]);\n\n  return NewTaskControl;\n}(React.Component);\n\nexport default NewTaskControl;","map":{"version":3,"sources":["/Users/juliankanaan/Documents/GitHub/reactExpressTodoApp/components/NewTaskController.jsx"],"names":["React","PropTypes","AddNewTaskInput","AddNewTaskButton","NewTaskControl","props","state","wantsToAddTask","handleAddTaskClick","bind","handleCancelAddTaskClick","setState","element","Component"],"mappings":";;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;IAGMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAb,CAFiB,CAGjB;;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B;AACA,UAAKC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BD,IAA9B,+BAAhC;AALiB;AAOlB;;;;yCACmB;AAClB,WAAKE,QAAL,CAAc;AAACJ,QAAAA,cAAc,EAAC;AAAhB,OAAd;AACD;;;+CACyB;AACxB,WAAKI,QAAL,CAAc;AAACJ,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD;;;6BAEO;AACN,UAAMA,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAlC;AACA,UAAIK,OAAJ;;AAEA,UAAIL,cAAJ,EAAoB;AAClBK,QAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKF,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,EAAiE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjE,CAAV;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,GAAG,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKJ,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACD;;AACD,aACU;AAACI,QAAAA,OAAO,EAAPA;AAAD,OADV;AAGD;;;;EA5B0BZ,KAAK,CAACa,S;;AA+BnC,eAAeT,cAAf","sourcesContent":["// imports input field, button, submit button\n// actually submits form\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport AddNewTaskInput from '../components/AddNewTaskInput'\nimport AddNewTaskButton from '../components/AddNewTaskButton'\n\n\nclass NewTaskControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {wantsToAddTask: ''};\n    // bind shit so we can use \"this\"\n    this.handleAddTaskClick = this.handleAddTaskClick.bind(this);\n    this.handleCancelAddTaskClick = this.handleCancelAddTaskClick.bind(this);\n\n  }\n  handleAddTaskClick(){\n    this.setState({wantsToAddTask:true});\n  }\n  handleCancelAddTaskClick(){\n    this.setState({wantsToAddTask: false})\n  }\n\n  render(){\n    const wantsToAddTask = this.state.wantsToAddTask;\n    let element;\n\n    if (wantsToAddTask) {\n      element = <div><AddNewTaskButton onClick={this.handleCancelAddTaskClick} /><AddNewTaskInput /></div>;\n    } else {\n      element = <AddNewTaskButton onClick={this.handleAddTaskClick} />;\n    }\n    return (\n              {element}\n          );\n  }\n}\n\nexport default NewTaskControl;\n"]},"metadata":{},"sourceType":"module"}